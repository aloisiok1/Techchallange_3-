# -*- coding: utf-8 -*-
"""ThechChallange3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nQNtsQ2uYebwHuO-bbMC5r6h0vLIx44a
"""

!pip install pyspark

import pyspark
import pandas as pd
from pyspark.sql import SparkSession
spark = SparkSession.builder.master("local[*]").getOrCreate()

df1 = spark.read.option("encoding", "UTF-8").csv("/content/Saude_covid.csv", sep = ";", inferSchema = True, header = True)
df1.show()

df1.createOrReplaceTempView("Saude_covid")

SaudeCovid = spark.sql('''select * from Saude_covid''')
SaudeCovid.show()

SaudeCovid.printSchema()

"""## 1 - Apresentaram sintomas (sexo)"""

Pessoas_que_apresentaram_sintomas= spark.sql('''
    SELECT  `Categoria de abertura`,
    `Categoria de abertura2`, Maio, Junho, Julho, Agosto, Setembro, Outubro, Novembro
    FROM Saude_covid
    where Indicador = 'Pessoas que apresentaram algum dos sintoma(s) (mil pessoas)'
        AND Pais = 'Brasil'
        AND `Variavel de abertura` = 'Sexo'

        ''')
Pessoas_que_apresentaram_sintomas.show(100)

"""## 1.1Primeiro entendimento

***Conseguimos definir que os meses mais importantes para análise serão os primeiros 3 (Maio, Junho e Julho) por terem o maior volume de procura por estabelecimentos de saúdo. Que é o objetivo da análise,
- quais são as principais ações que o Hospital deverá tomar caso haja um novo surto.
"""

Pessoas_que_apresentaram_sintomas= spark.sql('''
    SELECT  `Categoria de abertura`,
    `Categoria de abertura2`, Maio, Junho, Julho
    FROM Saude_covid
    where Indicador = 'Pessoas que apresentaram algum dos sintoma(s) (mil pessoas)'
        AND Pais = 'Brasil'
        AND `Variavel de abertura` = 'Sexo'

        ''')
from pyspark.sql.functions import concat, lit
Pessoas_que_apresentaram_sintomas = Pessoas_que_apresentaram_sintomas \
    .withColumn("Nova_Coluna", concat(col("Categoria de abertura"), lit(" "), col("Categoria de abertura2"))) \
    .drop("Categoria de abertura", "Categoria de abertura2")

Pessoas_que_apresentaram_sintomas.show(100)

df_Pessoas_c_sintomas = Pessoas_que_apresentaram_sintomas.toPandas()
df_Pessoas_c_sintomas['Maio'] = df_Pessoas_c_sintomas['Maio'].str.replace(' ', '').astype('float64')
df_Pessoas_c_sintomas['Junho'] = df_Pessoas_c_sintomas['Junho'].str.replace(' ', '').astype('float64')
df_Pessoas_c_sintomas['Julho'] = df_Pessoas_c_sintomas['Julho'].str.replace(' ', '').astype('float64')

categorias = df_Pessoas_c_sintomas['Nova_Coluna'].tolist()
valores = df_Pessoas_c_sintomas[['Maio', 'Junho', 'Julho']].values.tolist()

df_Pessoas_c_sintomas

df_Pessoas_c_sintomas = df_Pessoas_c_sintomas.drop([3, 6, 9])

df_Pessoas_c_sintomas['Nova_Coluna'] = df_Pessoas_c_sintomas['Nova_Coluna'].apply(lambda x: ' '.join(x.split()[:3]))

df_Pessoas_c_sintomas = df_Pessoas_c_sintomas.sort_values(by='Nova_Coluna')

import numpy as np
import matplotlib.pyplot as plt

# Preparando os dados
categorias = df_Pessoas_c_sintomas['Nova_Coluna'].tolist()
valores = df_Pessoas_c_sintomas[['Maio', 'Junho', 'Julho']].values

# Definindo a largura das barras
bar_width = 0.25

# Definindo a posição das barras
r1 = np.arange(len(categorias))
r2 = [x + bar_width for x in r1]
r3 = [x + bar_width for x in r2]

# Criando um gráfico de barras lado a lado
plt.figure(figsize=(24, 6))

plt.bar(r1, valores[:,0], color='b', width=bar_width, edgecolor='grey', label='Maio')
plt.bar(r2, valores[:,1], color='g', width=bar_width, edgecolor='grey', label='Junho')
plt.bar(r3, valores[:,2], color='r', width=bar_width, edgecolor='grey', label='Julho')

plt.xlabel('Categorias')
plt.ylabel('Numero de Pessoas (x Mil)')
plt.title('Pessoas que apresentaram algum dos sintoma(s) (mil pessoas)')
plt.xticks([r + bar_width for r in range(len(categorias))], categorias)
plt.legend()

# Exibe o gráfico
plt.show()

"""## Definições
 - A grande maioria não foi a nenhum estabelecimento de saúde. MAs os que foram foi um total de 5milhões e pessoas. Um número já considerado problerma se tratando as estrutura disponivel para atendimento.

 - Foram tanto homens quanto mulheres.

## 2 Apresentaram sintomas (Faixa Etária)
"""

Apresentaram_sintomas_idade= spark.sql('''
    SELECT  `Categoria de abertura`,
    `Categoria de abertura2`, Maio, Junho, Julho
    FROM Saude_covid
    where Indicador = 'Pessoas que apresentaram algum dos sintoma(s) (mil pessoas)'
        AND Pais = 'Brasil'
        AND `Variavel de abertura` = 'Grupos de Idade 2'

        ''')
Apresentaram_sintomas_idade.show(100)

Apresentaram_sintomas_idade = Apresentaram_sintomas_idade.toPandas()
Apresentaram_sintomas_idade['Maio'] = Apresentaram_sintomas_idade['Maio'].str.replace(' ', '').astype('float64')
Apresentaram_sintomas_idade['Junho'] = Apresentaram_sintomas_idade['Junho'].str.replace(' ', '').astype('float64')
Apresentaram_sintomas_idade['Julho'] = Apresentaram_sintomas_idade['Julho'].str.replace(' ', '').astype('float64')
Apresentaram_sintomas_idade

Apresentaram_sintomas_idade = Apresentaram_sintomas_idade.drop([3,4,5, 6, 9])

Apresentaram_sintomas_idade['Nova_Coluna'] = Apresentaram_sintomas_idade['Categoria de abertura'] + ' ' + Apresentaram_sintomas_idade['Categoria de abertura2']

Apresentaram_sintomas_idade['Nova_Coluna'] = Apresentaram_sintomas_idade['Nova_Coluna'].apply(lambda x: ' '.join(x.split()[:6]))

Apresentaram_sintomas_idade

Apresentaram_sintomas_idade = Apresentaram_sintomas_idade.sort_values(by='Categoria de abertura')

import numpy as np
import matplotlib.pyplot as plt

categorias = Apresentaram_sintomas_idade['Nova_Coluna'].tolist()
valores = Apresentaram_sintomas_idade[['Maio', 'Junho', 'Julho']].values.tolist()

bar_width = 0.25

r1 = np.arange(len(categorias))
r2 = [x + bar_width for x in r1]
r3 = [x + bar_width for x in r2]

plt.figure(figsize=(24, 6))
valores = np.array(valores)

plt.bar(r1, valores[:,0], color='b', width=bar_width, edgecolor='grey', label='Maio')
plt.bar(r2, valores[:,1], color='g', width=bar_width, edgecolor='grey', label='Junho')
plt.bar(r3, valores[:,2], color='r', width=bar_width, edgecolor='grey', label='Julho')

plt.xlabel('Categorias')
plt.ylabel('Numero de Pessoas (x Mil)')
plt.title('Pessoas que apresentaram algum dos sintoma por idades (mil pessoas)')
plt.xticks([r + bar_width for r in range(len(categorias))], categorias)
plt.legend()

plt.show()

"""## - A grande maioria das pessoas que tiveram sintomas foram as pessoas entre  0 e 59  anos. E também representaram a maioria do que procuraram um sistema de saúde.

## 3. Procuraram Atendimento em Hospitais (Faixa Etária)
"""

Foram_a_hospitais_idade= spark.sql('''
    SELECT  *
    FROM Saude_covid
    where Indicador
     = 'Pessoas que não procuraram atendimento em estabelecimento de saúde (mil pessoas)'
    ''')
Foram_a_hospitais_idade.show(100)

